@if (ShowResults)
{
    <Blazorise.Table Striped>
        <Blazorise.TableHeader>
            <Blazorise.TableRow>
                <Blazorise.TableHeaderCell>User</Blazorise.TableHeaderCell>
                <Blazorise.TableHeaderCell>Estimate</Blazorise.TableHeaderCell>
            </Blazorise.TableRow>
        </Blazorise.TableHeader>
        <Blazorise.TableBody>

            @foreach (var entry in InputResults!)
            {
                <Blazorise.TableRow>
                    <Blazorise.TableRowCell>@entry.Key</Blazorise.TableRowCell>
                    <Blazorise.TableRowCell>@entry.Value</Blazorise.TableRowCell>
                </Blazorise.TableRow>
            }

        </Blazorise.TableBody>
    </Blazorise.Table>

    <Blazorise.Table Striped>
        <Blazorise.TableHeader>
            <Blazorise.TableRow>
                <Blazorise.TableHeaderCell>Average Score</Blazorise.TableHeaderCell>
            </Blazorise.TableRow>
        </Blazorise.TableHeader>
        <Blazorise.TableBody>
            <Blazorise.TableRow>
                <Blazorise.TableRowCell>@GetAverageResult()</Blazorise.TableRowCell>
            </Blazorise.TableRow>
        </Blazorise.TableBody>
    </Blazorise.Table>    
}
else
{
    <Blazorise.Table Striped>
        <Blazorise.TableHeader>
            <Blazorise.TableRow>
                <Blazorise.TableHeaderCell>User</Blazorise.TableHeaderCell>
                <Blazorise.TableHeaderCell>Estimate</Blazorise.TableHeaderCell>
            </Blazorise.TableRow>
        </Blazorise.TableHeader>
        <Blazorise.TableBody>

            @foreach (var entry in InputResults)
            {
                <Blazorise.TableRow>
                    <Blazorise.TableRowCell>@entry.Key</Blazorise.TableRowCell>
                    <Blazorise.TableRowCell>???</Blazorise.TableRowCell>
                </Blazorise.TableRow>
            }

        </Blazorise.TableBody>
    </Blazorise.Table>

    <Blazorise.Table Striped>
        <Blazorise.TableHeader>
            <Blazorise.TableRow>
                <Blazorise.TableHeaderCell>Average Score</Blazorise.TableHeaderCell>
            </Blazorise.TableRow>
        </Blazorise.TableHeader>
        <Blazorise.TableBody>
            <Blazorise.TableRow>
                <Blazorise.TableRowCell>???</Blazorise.TableRowCell>
            </Blazorise.TableRow>
        </Blazorise.TableBody>
    </Blazorise.Table>
}

@code {
    [Parameter]
    public Dictionary<string, string>? InputResults { get; set; }

    [Parameter]
    public bool ShowResults { get; set; }

    private List<int> GetIntegerEstimates()
    {
        List<int> integerValues = new();
        foreach (var entry in InputResults!)
        {
            int.TryParse(entry.Value, out int output);
            integerValues.Add(output);
        }
        return integerValues;
    }


    private string GetAverageResult()
    {

        var integerValues = GetIntegerEstimates();
        if (integerValues.Any())
        {
            return integerValues.Average().ToString();
        }
        else
        {
            return string.Empty;
        }
    }

    private string GetACurlyWurly()
    {
        var integerValues = GetIntegerEstimates();

        if (integerValues.Count < 2)
        {
            return string.Empty;
        }

        bool allSame = integerValues.All(num => num == integerValues[0]);

        if (allSame)
        {
            return "YOU GET A CURLY WURLY!";
        }
        else
        {
            return string.Empty;
        }
    }
}
